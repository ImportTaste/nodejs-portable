name: build

on:
  pull_request:
    branches: 'master'
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'go.mod'
      - 'go.sum'
      - '*.go'
  push:
    branches: 'master'
    tags: '*.*.*'
    paths:
      - '.github/workflows/build.yml'
      - 'app/**'
      - 'go.mod'
      - 'go.sum'
      - '*.go'

jobs:
  release:
    runs-on: windows-latest
    steps:
      -
        # https://github.com/actions/checkout
        name: Checkout
        uses: actions/checkout@v1
      - name: Prepare
        id: prepare
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo ::set-output name=version::${GITHUB_REF#refs/tags/}
          else
            echo ::set-output name=version::0.0.0
          fi
        shell: bash
      -
        # https://github.com/actions/setup-go
        name: Set up Go
        uses: actions/setup-go@master
        with:
          go-version: 1.12.10
      -
        name: Set GOPATH
        # temporary fix (see https://github.com/actions/setup-go/issues/14)
        run: |
          echo "##[set-env name=GOPATH;]$(dirname $GITHUB_WORKSPACE)"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin"
          echo "##[add-path]$(dirname $GITHUB_WORKSPACE)/bin/windows_386"
        shell: bash
      -
        # https://github.com/crazy-max/ghaction-mage
        name: Mage build
        uses: crazy-max/ghaction-mage@v1
        with:
          version: latest
          args: build
      -
        # https://github.com/crazy-max/ghaction-upx
        name: UPX compress
        uses: crazy-max/ghaction-upx@v1
        if: success()
        with:
          version: latest
          file: bin/nodejs-portable.exe
          args: -fq
      -
        # https://github.com/softprops/action-gh-release
        name: GitHub Release
        uses: softprops/action-gh-release@v1
        if: success() && startsWith(github.ref, 'refs/tags/')
        with:
          draft: true
          files: |
            bin/nodejs-portable.exe
          name: ${{ steps.prepare.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
